package flow

import "github.com/DuarteMRAlves/maestro/internal/link"

// Input represents the several input flows for a stage
type Input struct {
	typ         InputType
	connections map[string]*link.Link
}

// InputType defines the type of input that the stage.Stage associated with this
// Input is expecting.
type InputType string

const (
	// InputInfer means the input type is not specified and should be inferred
	// from the received connections.
	InputInfer InputType = "Infer"
	// InputSingle means the stage only receives input from another stage.
	InputSingle InputType = "Single"
	// InputSource means the stage is a source stage and receives as input an
	// empty message that should be generated by the orchestrator.
	InputSource InputType = "Source"
	// InputMerge means the input is a merge of multiple different messages,
	// coming from different stages.
	InputMerge InputType = "Merge"
	// InputCollect means the input collects from multiple stages, but the
	// received messages are all equal and should be directly sent to this
	// input stage.
	InputCollect InputType = "Collect"
)

func NewInput() *Input {
	return &Input{
		typ:         InputInfer,
		connections: map[string]*link.Link{},
	}
}
