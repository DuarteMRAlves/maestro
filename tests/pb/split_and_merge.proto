// This file provides the definitions for a linear orchestration.
syntax = "proto3";

option go_package = "github.com/DuarteMRAlves/maestro/test/pb";

import "google/protobuf/empty.proto";

package pb;

service SplitAndMergeSource {
  rpc Process(google.protobuf.Empty) returns (SplitAndMergeMessage);
}

service SplitAndMergeTransform {
  rpc Process(SplitAndMergeMessage) returns (SplitAndMergeMessage);
}

service SplitAndMergeSink {
  rpc Process(SplitAndMergePair) returns (google.protobuf.Empty);
}

message SplitAndMergeMessage {
  int64 value = 1;
}

message SplitAndMergePair {
  SplitAndMergeMessage source = 1;
  SplitAndMergeMessage transformed = 2;
}